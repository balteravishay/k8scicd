{
    "source": 2,
    "id": 3,
    "revision": 17,
    "name": "Blue Green Pipeline",
    "description": null,
    "createdBy": {
        "id": "080f0825-b64f-63b2-8744-39a3cc387777",
        "displayName": "Avishay Balter",
        "uniqueName": "avbalter@microsoft.com",
        "url": "https://app.vssps.visualstudio.com/A112f0b30-360b-4a52-88e2-76e6a15eb6c8/_apis/Identities/080f0825-b64f-63b2-8744-39a3cc387777",
        "imageUrl": "https://abalterteam.visualstudio.com/_api/_common/identityImage?id=080f0825-b64f-63b2-8744-39a3cc387777&t=00000000-0000-0000-30f8-c39b9b2bd508"
    },
    "createdOn": "2017-12-01T10:04:47.093Z",
    "modifiedBy": {
        "id": "080f0825-b64f-63b2-8744-39a3cc387777",
        "displayName": "Avishay Balter",
        "uniqueName": "avbalter@microsoft.com",
        "url": "https://app.vssps.visualstudio.com/A112f0b30-360b-4a52-88e2-76e6a15eb6c8/_apis/Identities/080f0825-b64f-63b2-8744-39a3cc387777",
        "imageUrl": "https://abalterteam.visualstudio.com/_api/_common/identityImage?id=080f0825-b64f-63b2-8744-39a3cc387777&t=00000000-0000-0000-30f8-c39b9b2bd508"
    },
    "modifiedOn": "2017-12-27T06:41:22.140Z",
    "isDeleted": false,
    "path": "\\",
    "variables": {
        "var.image_name": {
            "value": "nginx:latest"
        },
        "var.name": {
            "value": "nginx"
        }
    },
    "variableGroups": [],
    "environments": [
        {
            "id": 5,
            "name": "Blue Green",
            "rank": 1,
            "owner": {
                "id": "080f0825-b64f-63b2-8744-39a3cc387777",
                "displayName": "Avishay Balter",
                "uniqueName": "avbalter@microsoft.com",
                "url": "https://app.vssps.visualstudio.com/A112f0b30-360b-4a52-88e2-76e6a15eb6c8/_apis/Identities/080f0825-b64f-63b2-8744-39a3cc387777",
                "imageUrl": "https://abalterteam.visualstudio.com/_api/_common/identityImage?id=080f0825-b64f-63b2-8744-39a3cc387777&t=00000000-0000-0000-30f8-c39b9b2bd508"
            },
            "variables": {
                "var.prev_state": {
                    "value": "blue"
                },
                "var.state": {
                    "value": "bluegreen"
                }
            },
            "variableGroups": [],
            "preDeployApprovals": {
                "approvals": [
                    {
                        "rank": 1,
                        "isAutomated": true,
                        "isNotificationOn": false,
                        "id": 14
                    }
                ]
            },
            "deployStep": {
                "id": 19
            },
            "postDeployApprovals": {
                "approvals": [
                    {
                        "rank": 1,
                        "isAutomated": false,
                        "isNotificationOn": false,
                        "approver": {
                            "id": "080f0825-b64f-63b2-8744-39a3cc387777",
                            "displayName": "Avishay Balter",
                            "uniqueName": "avbalter@microsoft.com",
                            "url": "https://app.vssps.visualstudio.com/A112f0b30-360b-4a52-88e2-76e6a15eb6c8/_apis/Identities/080f0825-b64f-63b2-8744-39a3cc387777",
                            "imageUrl": "https://abalterteam.visualstudio.com/_api/_common/identityImage?id=080f0825-b64f-63b2-8744-39a3cc387777&t=00000000-0000-0000-30f8-c39b9b2bd508"
                        },
                        "id": 20
                    }
                ],
                "approvalOptions": {
                    "requiredApproverCount": 0,
                    "releaseCreatorCanBeApprover": true,
                    "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
                    "enforceIdentityRevalidation": false,
                    "timeoutInMinutes": 2880,
                    "executionOrder": 1
                }
            },
            "deployPhases": [
                {
                    "deploymentInput": {
                        "parallelExecution": {
                            "parallelExecutionType": "none"
                        },
                        "skipArtifactsDownload": false,
                        "artifactsDownloadInput": {
                            "downloadInputs": []
                        },
                        "queueId": 71,
                        "demands": [],
                        "enableAccessToken": false,
                        "timeoutInMinutes": 0,
                        "jobCancelTimeoutInMinutes": 1,
                        "condition": "succeeded()",
                        "overrideInputs": {}
                    },
                    "rank": 1,
                    "phaseType": 1,
                    "name": "Deploy BluevGreen and Test",
                    "workflowTasks": [
                        {
                            "taskId": "4bbc6ca0-59b2-11e7-83fe-c360e4fd66d4",
                            "version": "1.*",
                            "name": "K8s downloader ",
                            "refName": "downloader4",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "k8sService": "21aa97e4-e24f-46c1-9ad1-f9ceed9a5587",
                                "kubectlBinary": "",
                                "downloadVersion": "",
                                "hasIstio": "false",
                                "IstioVersion": "0.1.6",
                                "hasHelm": "false",
                                "helmVersion": "2.5.0"
                            }
                        },
                        {
                            "taskId": "670be730-f416-11e6-be17-19bd09ccd9ea",
                            "version": "0.*",
                            "name": "Get deploy yaml template",
                            "refName": "shellexec1",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "code": "cp $(System.DefaultWorkingDirectory)/k8scd/bluegreen/deploy.yaml ./deploy.yaml"
                            }
                        },
                        {
                            "taskId": "670be730-f416-11e6-be17-19bd09ccd9ea",
                            "version": "0.*",
                            "name": "Get ingress yaml template",
                            "refName": "shellexec2",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "code": "cp $(System.DefaultWorkingDirectory)/k8scd/bluegreen/ingress_test.yaml ./ingress.yaml"
                            }
                        },
                        {
                            "taskId": "670be730-f416-11e6-be17-19bd09ccd9ea",
                            "version": "0.*",
                            "name": "Verify blue state ",
                            "refName": "shellexec1",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "code": "kubstate=$(kubectl get ing ingress -o=custom-columns=TAG:.metadata.labels.state | tail -n +2)\nexpected_state=\"$(var.prev_state)\"\necho expted state: $expected_state \necho cluster state: $kubstate\n\nif [ $kubstate = $expected_state ]; then\n  echo $expected_state state validated\nelse\n  >&2 echo invalid state: $kubstate\n exit 1\nfi"
                            }
                        },
                        {
                            "taskId": "670be730-f416-11e6-be17-19bd09ccd9ea",
                            "version": "0.*",
                            "name": "Transform deploy yaml",
                            "refName": "shellexec2",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "code": "next_release_id=$(Release.ReleaseId)\napplication_name=$(var.name)\nimage_name=$(var.image_name)\nreplica_count=$(var.replica_count)\n\nsed -i 's@$RELEASE_ID@'\"$next_release_id\"'@' deploy.yaml\nsed -i 's@$NAME@'\"$application_name\"'@' deploy.yaml\nsed -i 's@$IMAGE_NAME@'\"$image_name\"'@' deploy.yaml\nsed -i 's@$REPLICA_COUNT@'\"$replica_count\"'@' deploy.yaml\n\ncat deploy.yaml\n"
                            }
                        },
                        {
                            "taskId": "670be730-f416-11e6-be17-19bd09ccd9ea",
                            "version": "0.*",
                            "name": "Transform ingress.yaml ",
                            "refName": "shellexec3",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "code": "next_release_id=$(Release.ReleaseId)\napplication_name=$(var.name)\nstate=$(var.state)\ncurrent_release_id=$(kubectl get ing ingress -o=custom-columns=TAG:.metadata.labels.release | tail -n +2)\n\nsed -i 's@$RELEASE_ID@'\"$next_release_id\"'@' ingress.yaml\nsed -i 's@$PREV_RELEASE_ID@'\"$current_release_id\"'@' ingress.yaml\nsed -i 's@$NAME@'\"$application_name\"'@' ingress.yaml\nsed -i 's@$STATE@'\"$state\"'@' ingress.yaml\n\ncat ingress.yaml\n\n"
                            }
                        },
                        {
                            "taskId": "9bf07640-ed9b-11e6-8ac1-6b0636b1490f",
                            "version": "3.*",
                            "name": "Apply deploy.yaml",
                            "refName": "kubectlapply2",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "k8sService": "21aa97e4-e24f-46c1-9ad1-f9ceed9a5587",
                                "yamlfile": "deploy.yaml",
                                "kubectlBinary": "",
                                "downloadVersion": ""
                            }
                        },
                        {
                            "taskId": "670be730-f416-11e6-be17-19bd09ccd9ea",
                            "version": "0.*",
                            "name": "Wait for deployment",
                            "refName": "shellexec1",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 2,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "code": "release_id=$(Release.ReleaseId)\napplication_name=$(var.name)\nreplica_count=$(var.replica_count)\n\navailable=$(kubectl get deployment $(application_name)-$(application_ame) | tail -n +2 | awk '{print $5}')\necho there are $available pods available for $application_name\nwhile [  $available -ne replica_count ]; do\n  sleep .5\n  available=$(kubectl get deployment $(var.Name)-$(Release.ReleaseId) | tail -n +2 | awk '{print $5}')\n  echo there are $available pods available for $application_name\ndone\n"
                            }
                        },
                        {
                            "taskId": "9bf07640-ed9b-11e6-8ac1-6b0636b1490f",
                            "version": "3.*",
                            "name": "Apply ingress.yaml ",
                            "refName": "kubectlapply12",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "k8sService": "21aa97e4-e24f-46c1-9ad1-f9ceed9a5587",
                                "yamlfile": "ingress.yaml",
                                "kubectlBinary": "",
                                "downloadVersion": ""
                            }
                        }
                    ]
                },
                {
                    "deploymentInput": {
                        "parallelExecution": {
                            "parallelExecutionType": "none"
                        },
                        "skipArtifactsDownload": true,
                        "artifactsDownloadInput": {
                            "downloadInputs": []
                        },
                        "queueId": 72,
                        "demands": [],
                        "enableAccessToken": true,
                        "timeoutInMinutes": 0,
                        "jobCancelTimeoutInMinutes": 1,
                        "condition": "succeeded()",
                        "overrideInputs": {}
                    },
                    "rank": 2,
                    "phaseType": 1,
                    "name": "Test Green",
                    "workflowTasks": [
                        {
                            "taskId": "9648625c-1523-4eb5-b015-dfe7c685840c",
                            "version": "1.*",
                            "name": "Quick Web Performance Test quick green test ",
                            "refName": "QuickPerfTest1",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "connectedServiceName": "",
                                "websiteUrl": "https://52.166.133.182/test",
                                "testName": "quick green test ",
                                "vuLoad": "25",
                                "runDuration": "60",
                                "geoLocation": "Default",
                                "machineType": "0",
                                "avgResponseTimeThreshold": "1000"
                            }
                        }
                    ]
                }
            ],
            "environmentOptions": {
                "emailNotificationType": "OnlyOnFailure",
                "emailRecipients": "release.environment.owner;release.creator",
                "skipArtifactsDownload": false,
                "timeoutInMinutes": 0,
                "enableAccessToken": false,
                "publishDeploymentStatus": true
            },
            "demands": [],
            "conditions": [
                {
                    "name": "ReleaseStarted",
                    "conditionType": 1,
                    "value": ""
                }
            ],
            "executionPolicy": {
                "concurrencyCount": 0,
                "queueDepthCount": 0
            },
            "schedules": [],
            "retentionPolicy": {
                "daysToKeep": 30,
                "releasesToKeep": 3,
                "retainBuild": true
            },
            "processParameters": {},
            "properties": {},
            "preDeploymentGates": {
                "id": 0,
                "gatesOptions": null,
                "gates": []
            },
            "postDeploymentGates": {
                "id": 0,
                "gatesOptions": null,
                "gates": []
            }
        },
        {
            "id": 6,
            "name": "Green",
            "rank": 2,
            "owner": {
                "id": "080f0825-b64f-63b2-8744-39a3cc387777",
                "displayName": "Avishay Balter",
                "uniqueName": "avbalter@microsoft.com",
                "url": "https://app.vssps.visualstudio.com/A112f0b30-360b-4a52-88e2-76e6a15eb6c8/_apis/Identities/080f0825-b64f-63b2-8744-39a3cc387777",
                "imageUrl": "https://abalterteam.visualstudio.com/_api/_common/identityImage?id=080f0825-b64f-63b2-8744-39a3cc387777&t=00000000-0000-0000-30f8-c39b9b2bd508"
            },
            "variables": {
                "var.prev_state": {
                    "value": "bluegreen"
                },
                "var.state": {
                    "value": "green"
                }
            },
            "variableGroups": [],
            "preDeployApprovals": {
                "approvals": [
                    {
                        "rank": 1,
                        "isAutomated": true,
                        "isNotificationOn": false,
                        "id": 15
                    }
                ]
            },
            "deployStep": {
                "id": 18
            },
            "postDeployApprovals": {
                "approvals": [
                    {
                        "rank": 1,
                        "isAutomated": false,
                        "isNotificationOn": false,
                        "approver": {
                            "id": "080f0825-b64f-63b2-8744-39a3cc387777",
                            "displayName": "Avishay Balter",
                            "uniqueName": "avbalter@microsoft.com",
                            "url": "https://app.vssps.visualstudio.com/A112f0b30-360b-4a52-88e2-76e6a15eb6c8/_apis/Identities/080f0825-b64f-63b2-8744-39a3cc387777",
                            "imageUrl": "https://abalterteam.visualstudio.com/_api/_common/identityImage?id=080f0825-b64f-63b2-8744-39a3cc387777&t=00000000-0000-0000-30f8-c39b9b2bd508"
                        },
                        "id": 23
                    }
                ],
                "approvalOptions": {
                    "requiredApproverCount": 0,
                    "releaseCreatorCanBeApprover": true,
                    "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
                    "enforceIdentityRevalidation": false,
                    "timeoutInMinutes": 10080,
                    "executionOrder": 1
                }
            },
            "deployPhases": [
                {
                    "deploymentInput": {
                        "parallelExecution": {
                            "parallelExecutionType": "none"
                        },
                        "skipArtifactsDownload": false,
                        "artifactsDownloadInput": {
                            "downloadInputs": []
                        },
                        "queueId": 71,
                        "demands": [],
                        "enableAccessToken": false,
                        "timeoutInMinutes": 0,
                        "jobCancelTimeoutInMinutes": 1,
                        "condition": "succeeded()",
                        "overrideInputs": {}
                    },
                    "rank": 1,
                    "phaseType": 1,
                    "name": "Switch to Green",
                    "workflowTasks": [
                        {
                            "taskId": "4bbc6ca0-59b2-11e7-83fe-c360e4fd66d4",
                            "version": "1.*",
                            "name": "K8s downloader",
                            "refName": "Cloneddownloader41",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "k8sService": "21aa97e4-e24f-46c1-9ad1-f9ceed9a5587",
                                "kubectlBinary": "",
                                "downloadVersion": "",
                                "hasIstio": "false",
                                "IstioVersion": "0.1.6",
                                "hasHelm": "false",
                                "helmVersion": "2.5.0"
                            }
                        },
                        {
                            "taskId": "670be730-f416-11e6-be17-19bd09ccd9ea",
                            "version": "0.*",
                            "name": "Verify bluegreen state",
                            "refName": "shellexec1",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "code": "kubstate=$(kubectl get ing ingress -o=custom-columns=TAG:.metadata.labels.state | tail -n +2)\nexpected_state=\"$(var.prev_state)\"\necho expted state: $expected_state \necho cluster state: $kubstate\n\nif [ $kubstate = $expected_state ]; then\n  echo $expected_state state validated\nelse\n  >&2 echo invalid state: $kubstate\n exit 1\nfi"
                            }
                        },
                        {
                            "taskId": "670be730-f416-11e6-be17-19bd09ccd9ea",
                            "version": "0.*",
                            "name": "Get yaml templates",
                            "refName": "shellexec2",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "code": "cp $(System.DefaultWorkingDirectory)/k8scd/bluegreen/ingress_root.yaml ./ingress.yaml"
                            }
                        },
                        {
                            "taskId": "670be730-f416-11e6-be17-19bd09ccd9ea",
                            "version": "0.*",
                            "name": "Transform ingress.yaml ",
                            "refName": "shellexec3",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "code": "next_release_id=$(Release.ReleaseId)\napplication_name=$(var.name)\nstate=$(var.state)\n\nsed -i 's@$RELEASE_ID@'\"$next_release_id\"'@' ingress.yaml\nsed -i 's@$NAME@'\"$application_name\"'@' ingress.yaml\nsed -i 's@$STATE@'\"$state\"'@' ingress.yaml\n\ncat ingress.yaml\n\n"
                            }
                        },
                        {
                            "taskId": "9bf07640-ed9b-11e6-8ac1-6b0636b1490f",
                            "version": "3.*",
                            "name": "Apply ingress.yaml ",
                            "refName": "kubectlapply5",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "k8sService": "21aa97e4-e24f-46c1-9ad1-f9ceed9a5587",
                                "yamlfile": "ingress.yaml",
                                "kubectlBinary": "",
                                "downloadVersion": ""
                            }
                        }
                    ]
                }
            ],
            "environmentOptions": {
                "emailNotificationType": "OnlyOnFailure",
                "emailRecipients": "release.environment.owner;release.creator",
                "skipArtifactsDownload": false,
                "timeoutInMinutes": 0,
                "enableAccessToken": false,
                "publishDeploymentStatus": true
            },
            "demands": [],
            "conditions": [
                {
                    "name": "Blue Green",
                    "conditionType": 2,
                    "value": "4"
                }
            ],
            "executionPolicy": {
                "concurrencyCount": 0,
                "queueDepthCount": 0
            },
            "schedules": [],
            "retentionPolicy": {
                "daysToKeep": 30,
                "releasesToKeep": 3,
                "retainBuild": true
            },
            "processParameters": {},
            "properties": {},
            "preDeploymentGates": {
                "id": 0,
                "gatesOptions": null,
                "gates": []
            },
            "postDeploymentGates": {
                "id": 0,
                "gatesOptions": null,
                "gates": []
            }
        },
        {
            "id": 7,
            "name": "Blue",
            "rank": 3,
            "owner": {
                "id": "080f0825-b64f-63b2-8744-39a3cc387777",
                "displayName": "Avishay Balter",
                "uniqueName": "avbalter@microsoft.com",
                "url": "https://app.vssps.visualstudio.com/A112f0b30-360b-4a52-88e2-76e6a15eb6c8/_apis/Identities/080f0825-b64f-63b2-8744-39a3cc387777",
                "imageUrl": "https://abalterteam.visualstudio.com/_api/_common/identityImage?id=080f0825-b64f-63b2-8744-39a3cc387777&t=00000000-0000-0000-30f8-c39b9b2bd508"
            },
            "variables": {
                "var.prev_state": {
                    "value": "green"
                },
                "var.state": {
                    "value": "blue"
                }
            },
            "variableGroups": [],
            "preDeployApprovals": {
                "approvals": [
                    {
                        "rank": 1,
                        "isAutomated": true,
                        "isNotificationOn": false,
                        "id": 16
                    }
                ]
            },
            "deployStep": {
                "id": 17
            },
            "postDeployApprovals": {
                "approvals": [
                    {
                        "rank": 1,
                        "isAutomated": true,
                        "isNotificationOn": false,
                        "id": 22
                    }
                ]
            },
            "deployPhases": [
                {
                    "deploymentInput": {
                        "parallelExecution": {
                            "parallelExecutionType": "none"
                        },
                        "skipArtifactsDownload": false,
                        "artifactsDownloadInput": {
                            "downloadInputs": []
                        },
                        "queueId": 71,
                        "demands": [],
                        "enableAccessToken": false,
                        "timeoutInMinutes": 0,
                        "jobCancelTimeoutInMinutes": 1,
                        "condition": "succeeded()",
                        "overrideInputs": {}
                    },
                    "rank": 1,
                    "phaseType": 1,
                    "name": "Delete and Switch to blue",
                    "workflowTasks": [
                        {
                            "taskId": "4bbc6ca0-59b2-11e7-83fe-c360e4fd66d4",
                            "version": "1.*",
                            "name": "K8s downloader",
                            "refName": "ClonedCloneddownloader411",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "k8sService": "21aa97e4-e24f-46c1-9ad1-f9ceed9a5587",
                                "kubectlBinary": "",
                                "downloadVersion": "",
                                "hasIstio": "false",
                                "IstioVersion": "0.1.6",
                                "hasHelm": "false",
                                "helmVersion": "2.5.0"
                            }
                        },
                        {
                            "taskId": "670be730-f416-11e6-be17-19bd09ccd9ea",
                            "version": "0.*",
                            "name": "Verify green state ",
                            "refName": "shellexec1",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "code": "kubstate=$(kubectl get ing ingress -o=custom-columns=TAG:.metadata.labels.state | tail -n +2)\nexpected_state=\"$(var.prev_state)\"\necho expted state: $expected_state \necho cluster state: $kubstate\n\nif [ $kubstate = $expected_state ]; then\n  echo $expected_state state validated\nelse\n  >&2 echo invalid state: $kubstate\n exit 1\nfi"
                            }
                        },
                        {
                            "taskId": "670be730-f416-11e6-be17-19bd09ccd9ea",
                            "version": "0.*",
                            "name": "Get yaml templates",
                            "refName": "shellexec2",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "code": "cp $(System.DefaultWorkingDirectory)/k8scd/bluegreen/ingress_root.yaml ./ingress.yaml"
                            }
                        },
                        {
                            "taskId": "670be730-f416-11e6-be17-19bd09ccd9ea",
                            "version": "0.*",
                            "name": "Transform ingress.yaml ",
                            "refName": "shellexec3",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "code": "next_release_id=$(Release.ReleaseId)\napplication_name=$(var.name)\nstate=$(var.state)\n\nsed -i 's@$RELEASE_ID@'\"$next_release_id\"'@' ingress.yaml\nsed -i 's@$NAME@'\"$application_name\"'@' ingress.yaml\nsed -i 's@$STATE@'\"$state\"'@' ingress.yaml\n\ncat ingress.yaml\n"
                            }
                        },
                        {
                            "taskId": "670be730-f416-11e6-be17-19bd09ccd9ea",
                            "version": "0.*",
                            "name": "Delete Previous deployment",
                            "refName": "shellexec4",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "code": "application_name=$(var.name)\nnext_release_id=$(Release.ReleaseId)\ncurrent_service_name=$(kubectl get ing ingress -o=custom-columns=TAG:.spec.rules[0].http.paths[0].backend.serviceName | tail -n +2)\nprevious_service_name=$(kubectl get services -l name=$application_name,serviceName!='$current_service_name' -o=custom-columns=TAG:.metadata.name| tail -n +2)\nprevious_deployment_name=$(kubectl get deployments -l name=$application_name,release!=$next_release_id -o=custom-columns=TAG:.metadata.name| tail -n +2)\n\necho deleting previous service: $previous_service_name\necho deleting previous deployment: $previous_deployment_name\n\nkubectl delete service $previous_service_name\nkubectl delete deployment $previous_deployment_name"
                            }
                        },
                        {
                            "taskId": "9bf07640-ed9b-11e6-8ac1-6b0636b1490f",
                            "version": "3.*",
                            "name": "Apply ingress.yaml",
                            "refName": "kubectlapply4",
                            "enabled": true,
                            "alwaysRun": false,
                            "continueOnError": false,
                            "timeoutInMinutes": 0,
                            "definitionType": "task",
                            "overrideInputs": {},
                            "condition": "succeeded()",
                            "inputs": {
                                "k8sService": "21aa97e4-e24f-46c1-9ad1-f9ceed9a5587",
                                "yamlfile": "ingress.yaml",
                                "kubectlBinary": "",
                                "downloadVersion": ""
                            }
                        }
                    ]
                }
            ],
            "environmentOptions": {
                "emailNotificationType": "OnlyOnFailure",
                "emailRecipients": "release.environment.owner;release.creator",
                "skipArtifactsDownload": false,
                "timeoutInMinutes": 0,
                "enableAccessToken": false,
                "publishDeploymentStatus": true
            },
            "demands": [],
            "conditions": [
                {
                    "name": "Green",
                    "conditionType": 2,
                    "value": "4"
                }
            ],
            "executionPolicy": {
                "concurrencyCount": 0,
                "queueDepthCount": 0
            },
            "schedules": [],
            "retentionPolicy": {
                "daysToKeep": 30,
                "releasesToKeep": 3,
                "retainBuild": true
            },
            "processParameters": {},
            "properties": {},
            "preDeploymentGates": {
                "id": 0,
                "gatesOptions": null,
                "gates": []
            },
            "postDeploymentGates": {
                "id": 0,
                "gatesOptions": null,
                "gates": []
            }
        }
    ],
    "artifacts": [
        {
            "sourceId": "2f33331a-2412-43c5-b882-13fc16d80d98:7751401e-91a4-4af9-8fb2-f519a3622fbd",
            "type": "Git",
            "alias": "k8scd",
            "definitionReference": {
                "branches": {
                    "id": "master",
                    "name": "master"
                },
                "checkoutSubmodules": {
                    "id": "",
                    "name": ""
                },
                "defaultVersionType": {
                    "id": "selectDuringReleaseCreationType",
                    "name": "Specify at the time of release creation"
                },
                "definition": {
                    "id": "7751401e-91a4-4af9-8fb2-f519a3622fbd",
                    "name": "k8scd"
                },
                "fetchDepth": {
                    "id": "",
                    "name": ""
                },
                "gitLfsSupport": {
                    "id": "",
                    "name": ""
                },
                "project": {
                    "id": "2f33331a-2412-43c5-b882-13fc16d80d98",
                    "name": "k8scd"
                }
            },
            "isPrimary": true
        }
    ],
    "triggers": [],
    "releaseNameFormat": "Release-$(rev:r)",
    "url": "https://abalterteam.vsrm.visualstudio.com/2f33331a-2412-43c5-b882-13fc16d80d98/_apis/Release/definitions/3",
    "_links": {
        "self": {
            "href": "https://abalterteam.vsrm.visualstudio.com/2f33331a-2412-43c5-b882-13fc16d80d98/_apis/Release/definitions/3"
        },
        "web": {
            "href": "https://abalterteam.visualstudio.com/2f33331a-2412-43c5-b882-13fc16d80d98/_release?definitionId=3"
        }
    },
    "tags": [],
    "properties": {
        "DefinitionCreationSource": {
            "$type": "System.String",
            "$value": "ReleaseClone"
        }
    }
}